install.packages("nlme")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
########################## SIMPLE ##########################
xyplot(Ozone ~ Wind, data = airquality)
####################### MULTIVARIATE #######################
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
############################################################
# A lattice produces an object of class "trellis", that,
# unlike base plots is a printable object. Base plots print
# directly in the device, they do not produce such objects
############################################################
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
class(p)
################# LATTICE PANEL FUNCTIONS #################
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f*x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2,1))
# custom panel function
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
panel.text("yo")
})
library(nlme)
library(lattice)
library(ggplot2)
data("airquality")
xyplot(weight ~ Time | Diet, BodyWeight)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
library(nlme)
library(lattice)
library(ggplot2)
data("airquality")
xyplot(weight ~ Time | Diet, BodyWeight)
airquality <- transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
library(nlme)
library(lattice)
library(ggplot2)
data("airquality")
xyplot(weight ~ Time | Diet, BodyWeight)
airquality <- transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
A <- ggplot(airquality, aes(Wind, Ozone))
print(A)
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
x <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.5, y + 0.5, labels = as.character(1:12))
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.5, y + 0.5, labels = as.character(1:12))
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
# create section separator with hashtags
sctn <- function(tex){
# tex is the text to be put in the middle of two lines of "#"
tex <- toupper(tex)
ln <- nchar(tex)
hashhash <- rep("#", (60 - ln - 2)/2)
cat(hashhash, " ", tex, " ", hashhash, sep = "")
}
sctn("clustered data")
sctn("finding distances")
###################### CLUSTERED DATA ######################
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
#################### FINDING DISTANCES ####################
dataFrame <- data.frame(x = x, y = y)
dist(dataFrame)
sctn("clustering")
#################### FINDING DISTANCES ####################
###################### CLUSTERED DATA ######################
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
#################### FINDING DISTANCES ####################
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
######################## CLUSTERING ########################
h_clustering <- hclust(distxy)
plot(h_clustering)
###################### CLUSTERED DATA ######################
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
#################### FINDING DISTANCES ####################
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
######################## CLUSTERING ########################
h_clustering <- hclust(distxy)
plot(h_clustering)
rm(list = ls())
swirl()
library(swirl)
swirl()
head(airquality)
range(Ozone, na.rm = TRUE)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = Month, ylab = "Ozone (ppb)", col.a)
boxplot(Ozone ~ Month, airquality, xlab = Month, ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = Month, ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
rm(list = ls())
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
?volcano
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1,2))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(2, 1))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(2, 1))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
# par(mfrow = c(2, 1))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2), mar = c(1,1,1,1))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2), mar = c(1,1,1,1))
image(volcano, col = pal(20))
image(volcano, col = pal(5))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2), mar = c(1,1,1,1))
image(volcano, col = pal(20)) #more shades
image(volcano, col = pal(5)) #less shades
cols2 <- brewer.pal(3, "Set3")
x <- rnorm(1000000)
y <- rnorm(1000000)
smoothScatter(x, y, colramp = colorRampPalette(cols2))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2), mar = c(1,1,1,1))
image(volcano, col = pal(20)) #more shades
image(volcano, col = pal(5)) #less shades
cols2 <- brewer.pal(3, "Set3")
cols2
x <- rnorm(1000000)
y <- rnorm(1000000)
smoothScatter(x, y, colramp = colorRampPalette(cols2))
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 19, col = rgb(0, 0, 0, 0.2))
dev.off()
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 19, col = rgb(0, 0, 0, 0.2))
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 19, col = rgb(0, 0, 0, 0.2))
plot(x, y, pch = 19, col = rgb(255, 0, 0, 0.5))
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 19, col = rgb(0, 0, 0, 0.2))
plot(x, y, pch = 19, col = rgb(1, 0, 0, 0.5))
########################## PLOT3 ##########################
# Of the four types of sources indicated by the type (point,
# nonpoint, onroad, nonroad) variable, which of these four
# sources have seen decreases in emissions from 1999–2008
# for Baltimore City? Which have seen increases in emissions
# from 1999–2008? Use the ggplot2 plotting system to make a
# plot answer this question.
######################### IMPORTS #########################
library(dplyr)
library(ggplot2)
p <- "/home/rogelio/Desktop/datasciencecoursera/"
ath <- "data/eda_final_project"
path <- paste0(p, ath)
setwd(path)
NEI <- readRDS("./summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
######################## SUBSETTING ########################
NEI1 <- NEI %>% filter(fips == "24510") %>%
aggregate(Emissions ~ year + type, data = ., sum)
####################### PLOT DEVICE #######################
ath <- "exploratory_data_analysis_final_project"
path <- paste0(p, ath)
setwd(path)
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(2, "lines")) +
theme(plot.margin = unit(c(1,1,1,0.5), "lines"))
print(p)
dev.off()
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(2, "lines")) +
theme(plot.margin = unit(c(1,1,1,0.5), "lines"))+
theme_set(theme_gray(base_size = 18))
print(p)
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(2, "lines")) +
theme(plot.margin = unit(c(1,1,1,0.5), "lines"))+
theme_set(theme_gray(base_size = 18))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(2, "lines")) +
theme(plot.margin = unit(c(1,1,1,0.5), "lines"))+
theme_set(theme_gray(base_size = 13))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(2, "lines")) +
theme(plot.margin = unit(c(1,1,1,0.5), "lines"))+
theme_set(theme_gray(base_size = 13))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))+
theme_set(theme_gray(base_size = 13))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))+
theme_set(theme_gray(base_size = 13))
print(p)
dev.off()
rm(list = ls())
dev.off()
########################## PLOT3 ##########################
# Of the four types of sources indicated by the type (point,
# nonpoint, onroad, nonroad) variable, which of these four
# sources have seen decreases in emissions from 1999–2008
# for Baltimore City? Which have seen increases in emissions
# from 1999–2008? Use the ggplot2 plotting system to make a
# plot answer this question.
######################### IMPORTS #########################
library(dplyr)
library(ggplot2)
p <- "/home/rogelio/Desktop/datasciencecoursera/"
ath <- "data/eda_final_project"
path <- paste0(p, ath)
setwd(path)
NEI <- readRDS("./summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
######################## SUBSETTING ########################
NEI1 <- NEI %>% filter(fips == "24510") %>%
aggregate(Emissions ~ year + type, data = ., sum)
####################### PLOT DEVICE #######################
ath <- "exploratory_data_analysis_final_project"
path <- paste0(p, ath)
setwd(path)
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))+
theme_set(theme_gray(base_size = 13))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))+
theme_set(theme_gray(base_size = 13))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))+
theme_set(theme_gray(base_size = 11))
print(p)
dev.off()
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))+
theme_set(theme_gray(base_size = 11))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme_set(theme_gray(base_size = 13))
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point() + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme_set(theme_gray(base_size = 13)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point(col = "red") + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme_set(theme_gray(base_size = 13)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point(col = "red", pch = 19) + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme_set(theme_gray(base_size = 13)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point(col = "red", pch = 20) + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme_set(theme_gray(base_size = 13)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point(col = "red", size = 3) + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme_set(theme_gray(base_size = 13)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point(col = "red", size = 3) + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme_set(theme_gray(base_size = 13)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot3.png")
p <- ggplot(NEI1, aes(year, Emissions))
p <- p + geom_point(col = "red", size = 3) + geom_smooth(method = "lm") +
facet_wrap(~type, ncol = 2) +
labs(title = "Emissions by year and by source (Baltimore City)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
theme_set(theme_gray(base_size = 14)) +
theme(panel.margin = unit(3, "lines")) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines")) +
labs(y = "Emissions (tons)")
print(p)
dev.off()
