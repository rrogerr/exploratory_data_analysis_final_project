xyplot(y ~ x | f, layout = c(2,1))
# custom panel function
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
xyplot(y ~ x | f, panel = function(x, y, ...){
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
panel.text("yo")
})
library(nlme)
library(lattice)
library(ggplot2)
data("airquality")
xyplot(weight ~ Time | Diet, BodyWeight)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
library(nlme)
library(lattice)
library(ggplot2)
data("airquality")
xyplot(weight ~ Time | Diet, BodyWeight)
airquality <- transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
library(nlme)
library(lattice)
library(ggplot2)
data("airquality")
xyplot(weight ~ Time | Diet, BodyWeight)
airquality <- transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
A <- ggplot(airquality, aes(Wind, Ozone))
print(A)
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
x <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.5, y + 0.5, labels = as.character(1:12))
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.5, y + 0.5, labels = as.character(1:12))
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
# create section separator with hashtags
sctn <- function(tex){
# tex is the text to be put in the middle of two lines of "#"
tex <- toupper(tex)
ln <- nchar(tex)
hashhash <- rep("#", (60 - ln - 2)/2)
cat(hashhash, " ", tex, " ", hashhash, sep = "")
}
sctn("clustered data")
sctn("finding distances")
###################### CLUSTERED DATA ######################
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
#################### FINDING DISTANCES ####################
dataFrame <- data.frame(x = x, y = y)
dist(dataFrame)
sctn("clustering")
#################### FINDING DISTANCES ####################
###################### CLUSTERED DATA ######################
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
#################### FINDING DISTANCES ####################
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
######################## CLUSTERING ########################
h_clustering <- hclust(distxy)
plot(h_clustering)
###################### CLUSTERED DATA ######################
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
#################### FINDING DISTANCES ####################
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
######################## CLUSTERING ########################
h_clustering <- hclust(distxy)
plot(h_clustering)
rm(list = ls())
swirl()
library(swirl)
swirl()
head(airquality)
range(Ozone, na.rm = TRUE)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = Month, ylab = "Ozone (ppb)", col.a)
boxplot(Ozone ~ Month, airquality, xlab = Month, ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = Month, ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
rm(list = ls())
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
?volcano
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1,2))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(2, 1))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(2, 1))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
# par(mfrow = c(2, 1))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2), mar = c(1,1,1,1))
image(volcano, col = pal(20))
image(volcano, col = pal(10))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2), mar = c(1,1,1,1))
image(volcano, col = pal(20))
image(volcano, col = pal(5))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2), mar = c(1,1,1,1))
image(volcano, col = pal(20)) #more shades
image(volcano, col = pal(5)) #less shades
cols2 <- brewer.pal(3, "Set3")
x <- rnorm(1000000)
y <- rnorm(1000000)
smoothScatter(x, y, colramp = colorRampPalette(cols2))
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
par(mfrow = c(1, 2), mar = c(1,1,1,1))
image(volcano, col = pal(20)) #more shades
image(volcano, col = pal(5)) #less shades
cols2 <- brewer.pal(3, "Set3")
cols2
x <- rnorm(1000000)
y <- rnorm(1000000)
smoothScatter(x, y, colramp = colorRampPalette(cols2))
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 19, col = rgb(0, 0, 0, 0.2))
dev.off()
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 19, col = rgb(0, 0, 0, 0.2))
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 19, col = rgb(0, 0, 0, 0.2))
plot(x, y, pch = 19, col = rgb(255, 0, 0, 0.5))
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 19, col = rgb(0, 0, 0, 0.2))
plot(x, y, pch = 19, col = rgb(1, 0, 0, 0.5))
# create section separator with hashtags
sctn <- function(tex){
# tex is the text to be put in the middle of two lines of "#"
tex <- toupper(tex)
ln <- nchar(tex)
hashhash <- rep("#", (60 - ln - 2)/2)
cat(hashhash, " ", tex, " ", hashhash, sep = "")
}
sctn("plot5")
sctn("subsetting")
########################## PLOT5 ##########################
# How have emissions from motor vehicle sources changed from
# 1999–2008 in Baltimore City?
######################### IMPORTS #########################
library(dplyr)
library(ggplot2)
p <- "/home/rogelio/Desktop/datasciencecoursera/"
ath <- "data/eda_final_project"
path <- paste0(p, ath)
setwd(path)
NEI <- readRDS("./summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
######################## SUBSETTING ########################
head(SCC$Short.Name)
dim(SCC)
a <- grepl("[Mm]otor [Vv]ehicle", SCC$Short.Name)
length(a)
head(a)
b <- SCC$Short.Name[a]
head(b)
length(b)
df <- data.frame(a = c(1,2,3), b = c(4,5,6), c = c(7,8,9))
filter(df, a %in% c(1,3) & c>9)
filter(df, a %in% c(1,3) & c >= 9)
filter(df, a %in% c(1,3) & c >= 7)
filter(df, a %in% c(1,3) & c%2)
filter(df, a %in% c(1,3) & c%%5)
filter(df, a %in% c(1,3) & c%%2)
filter(df, a %in% c(1,2) & c%%3)
SCC_motor <- grepl("[Mm]otor [Vv]ehicle", SCC$Short.Name)
# getting the codes to subset in NEI
codes_motor <- SCC$SCC[SCC_motor]
# subsetting and collapsing NEI
NEI_motor <- filter(NEI, SCC %in% codes_motor & fips == "24510") %>%
aggregate(Emissions ~ year, data = ., sum)
sum(NEI_motor$Emissions)
NEI_motor
########################## PLOT5 ##########################
# How have emissions from motor vehicle sources changed
# from 1999–2008 in Baltimore City?
######################### IMPORTS #########################
library(dplyr)
library(ggplot2)
p <- "/home/rogelio/Desktop/datasciencecoursera/"
ath <- "data/eda_final_project"
path <- paste0(p, ath)
setwd(path)
NEI <- readRDS("./summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
######################## SUBSETTING ########################
# WARNING! I'm assuming that looking for the regex "[Mm]otor
# [Vvehicle]" in the column Short.Name of SCC will give me
# all the motor vehicle sources
SCC_motor <- grepl("[Mm]otor [Vv]ehicle", SCC$Short.Name)
# getting the codes to subset in NEI
codes_motor <- SCC$SCC[SCC_motor]
# subsetting and collapsing NEI
NEI_motor <- filter(NEI, SCC %in% codes_motor & fips == "24510") %>%
aggregate(Emissions ~ year, data = ., sum)
NEI_motor
NEI_motor2 <- filter(NEI, SCC %in% codes_motor & fips == "06037") %>%
aggregate(Emissions ~ year, data = ., sum)
NEI_motor2
sum(grepl("[Mm]otor [Vv]ehicle", SCC$EI.Sector))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$Option.Group))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$Option.Set))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$SCC.Level.One))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$SCC.Level.Two))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$SCC.Level.Three))
identical(grepl("[Mm]otor [Vv]ehicle", SCC$SCC.Level.Three), grepl("[Mm]otor [Vv]ehicle", SCC$Short.Name))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$SCC.Level.Four))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$Map.To))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$Last.Inventory.Year))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$Created_Date))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$Revised_Date))
sum(grepl("[Mm]otor [Vv]ehicle", SCC$Usage.Notes))
ath <- "exploratory_data_analysis_final_project"
path <- paste0(p, ath)
setwd(path)
png("./plot4.png")
p <- ggplot(NEI_motor, aes(year, Emissions)) +
geom_point(col = "red", size = 3) +
geom_smooth(method = "lm") +
labs(title = "emissions from motor vehicle sources in Baltimore City") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
dev.off()
ath <- "exploratory_data_analysis_final_project"
path <- paste0(p, ath)
setwd(path)
png("./plot4.png")
p <- ggplot(NEI_motor, aes(year, Emissions)) +
geom_point(col = "red", size = 3) +
geom_smooth(method = "lm") +
labs(title = "emissions from motor vehicle sources in Baltimore City") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
########################## PLOT6 ##########################
# Compare emissions from motor vehicle sources in Baltimore
# City with emissions from motor vehicle sources in Los
# Angeles County, California (fips == "06037"). Which city
# has seen greater changes over time in motor vehicle
# emissions?
######################### IMPORTS #########################
library(dplyr)
library(ggplot2)
p <- "/home/rogelio/Desktop/datasciencecoursera/"
ath <- "data/eda_final_project"
path <- paste0(p, ath)
setwd(path)
NEI <- readRDS("./summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
######################## SUBSETTING ########################
# WARNING! I'm assuming that looking for the regex "[Mm]otor
# [Vvehicle]" in the column Short.Name of SCC will give me
# all the motor vehicle sources
SCC_motor <- grepl("[Mm]otor [Vv]ehicle", SCC$Short.Name)
# getting the codes to subset in NEI
codes_motor <- SCC$SCC[SCC_motor]
# subsetting and collapsing NEI for Baltimore City
NEI_BC <- filter(NEI, SCC %in% codes_motor & fips == "24510") %>%
aggregate(Emissions ~ year, data = ., sum)
# IMPORTANT: It seems that there is no data available for
# motor vehicle sources in Baltimore City in years 1999
# and 2008
# subsetting and collapsing NEI for Los Angeles
NEI_LA <- filter(NEI, SCC %in% codes_motor & fips == "06037") %>%
aggregate(Emissions ~ year, data = ., sum)
NEI_LA
NEI_BC
ath <- "exploratory_data_analysis_final_project"
path <- paste0(p, ath)
setwd(path)
p <- ggplot(NEI_LA, aes(year, Emissions)) +
geom_point(col = "Los Angeles", size = 3) +
geom_smooth(method = "lm") +
geom_point(data = NEI_BC, col = "Baltimore City") +
geom_smooth(data = NEI_BC, method = "lm") +
labs(title = "emissions from motor vehicle sources (Baltimore City vs. Los Angeles)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
p <- ggplot(NEI_LA, aes(year, Emissions)) +
geom_point(aes(color = "Los Angeles"), size = 3) +
geom_smooth(method = "lm") +
geom_point(data = NEI_BC, aes(color = "Baltimore City")) +
geom_smooth(data = NEI_BC, method = "lm") +
labs(title = "emissions from motor vehicle sources (Baltimore City vs. Los Angeles)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
png("./plot6.png")
p <- ggplot(NEI_LA, aes(year, Emissions)) +
geom_point(aes(color = "Los Angeles"), size = 3) +
geom_smooth(method = "lm") +
geom_point(data = NEI_BC, aes(color = "Baltimore City")) +
geom_smooth(data = NEI_BC, method = "lm") +
labs(title = "emissions from motor vehicle sources (Baltimore City vs. Los Angeles)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot6.png")
p <- ggplot(NEI_LA, aes(year, Emissions)) +
geom_point(aes(color = "Los Angeles"), size = 3) +
geom_smooth(method = "lm") +
geom_point(data = NEI_BC, aes(color = "Baltimore City")) +
geom_smooth(data = NEI_BC, method = "lm") +
labs(title = "emissions from motor vehicle sources (Baltimore City vs. Los Angeles)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(2.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot6.png")
p <- ggplot(NEI_LA, aes(year, Emissions)) +
geom_point(aes(color = "Los Angeles"), size = 3) +
geom_smooth(method = "lm") +
geom_point(data = NEI_BC, aes(color = "Baltimore City")) +
geom_smooth(data = NEI_BC, method = "lm") +
labs(title = "emissions from motor vehicle sources\n(Baltimore City vs. Los Angeles)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(2.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
png("./plot6.png")
p <- ggplot(NEI_LA, aes(year, Emissions)) +
geom_point(aes(color = "Los Angeles"), size = 3) +
geom_smooth(method = "lm") +
geom_point(data = NEI_BC, aes(color = "Baltimore City"), size = 3) +
geom_smooth(data = NEI_BC, method = "lm") +
labs(title = "emissions from motor vehicle sources\n(Baltimore City vs. Los Angeles)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(2.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
######################## SUBSETTING ########################
# WARNING! I'm assuming that looking for the regex "[Cc]oal"
# in the column Short.Name of SCC will give me all the coal
# related sources
SC_coal <- grepl("[Cc]oal", SCC$Short.Name, perl = TRUE)
# getting the codes to subset in NEI
codes_coal <- SCC$SCC[SC_coal]
# subsetting and collapsing NEI
NEI_coal <- filter(NEI, SCC %in% codes_coal) %>%
aggregate(Emissions ~ year, data = ., sum)
####################### PLOT DEVICE #######################
ath <- "exploratory_data_analysis_final_project"
path <- paste0(p, ath)
setwd(path)
png("./plot4.png")
p <- ggplot(NEI_coal, aes(year, Emissions)) +
geom_point(col = "red", size = 3) +
geom_smooth(method = "lm") +
labs(title = "National emissions (coal combustion-related)") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
######################## SUBSETTING ########################
# WARNING! I'm assuming that looking for the regex "[Mm]otor
# [Vvehicle]" in the column Short.Name of SCC will give me
# all the motor vehicle sources
SCC_motor <- grepl("[Mm]otor [Vv]ehicle", SCC$Short.Name)
# getting the codes to subset in NEI
codes_motor <- SCC$SCC[SCC_motor]
# subsetting and collapsing NEI
NEI_motor <- filter(NEI, SCC %in% codes_motor & fips == "24510") %>%
aggregate(Emissions ~ year, data = ., sum)
# IMPORTANT: It seems that there is no data available for
# motor vehicle sources in Baltimore City in years 1999
# and 2008
####################### PLOT DEVICE #######################
ath <- "exploratory_data_analysis_final_project"
path <- paste0(p, ath)
setwd(path)
png("./plot5.png")
p <- ggplot(NEI_motor, aes(year, Emissions)) +
geom_point(col = "red", size = 3) +
geom_smooth(method = "lm") +
labs(title = "emissions from motor vehicle sources in Baltimore City") +
scale_x_discrete(limits = c(1999, 2002, 2005, 2008)) +
labs(y = "Emissions (tons)") +
theme_set(theme_gray(base_size = 14)) +
theme(plot.margin = unit(c(1.5,1.5,1.5,0.5), "lines"))
print(p)
dev.off()
NEI_BC
SCC_motor <- grepl("[Mm]otor [Vv]ehicle", SCC$Short.Name)
# getting the codes to subset in NEI
codes_motor <- SCC$SCC[SCC_motor]
# subsetting and collapsing NEI
NEI_motor <- subset(NEI, SCC %in% codes_motor & fips == "24510") %>%
aggregate(Emissions ~ year, data = ., sum)
# IMPORTANT: It seems that there is no data available for
# motor vehicle sources in Baltimore City in years 1999
# and 2008
NEI_motor
